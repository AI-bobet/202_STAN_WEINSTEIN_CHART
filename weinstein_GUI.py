# %%

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'weinstein_pyqt5.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# import sip  # can be installed : pip install sip
from numpy.lib.function_base import average
import sqlalchemy
import os
import pandas as pd
import seaborn as sns
from matplotlib.figure import Figure
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas, NavigationToolbar2QT as Navi
from PyQt5.QtWidgets import QFileDialog, QApplication, QWidget, QComboBox, QHBoxLayout
from PyQt5 import QtCore, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib
import matplotlib.pyplot as plt
import mplfinance as mpf
from weinstein import plot_data
#from weinstein import price_data, Mansfield_RS
matplotlib.use('Qt5Agg')


# load database
engine = sqlalchemy.create_engine('postgresql://{0}:{1}@{2}:{3}/trading'.format(os.environ.get('db_user'), os.environ.get('db_password'),
                                                                                os.environ.get('db_host'), os.environ.get('db_port')))

interval = ['D', 'W']
timespan = ['TTM', 'YTD', '5Y', 'Max']
ma = ['SMA', 'EMA']
exchange = list(pd.read_sql_table('exchanges', engine)['exchange'])
pse_marketaverage = ['PSEi', 'PSE All Shares']

# %%


# class Canvas(FigureCanvas):
#     # def __init__(self, parent):
#     #     fig, self.axes = plt.subplots(figsize=(5, 2), dpi=200)
#     #     super().__init__(fig)
#     #     self.setParent(parent)

#     sector_user_input = user_input_index()
#     data = sector_data(sector_user_input)
#     index_data = PSE_sector(data)
#     RS = Mansfield_RS(index_data)

#     max_date = RS.index.max()
#     min_date = RS.index.min()

#     # Convert Timestamp/Datetime to String
#     max_date = pd.to_datetime(max_date).strftime('%Y-%m-%d')
#     min_date = pd.to_datetime(min_date).strftime('%Y-%m-%d')

#     # Filter sector data in parallel with the number of data in RS
#     index_data = index_data.loc[min_date:max_date]

#     ap = mpf.make_addplot(RS, panel=1, type='line')

#     # Create my own `marketcolors` to use with the `nightclouds` style:
#     mc = mpf.make_marketcolors(up='#00ff00', down='#ff2e2e', inherit=True)

#     # Create a new style based on `nightclouds` but with my own `marketcolors`:
#     s = mpf.make_mpf_style(base_mpf_style='nightclouds', marketcolors=mc)

#     fig, self.axes = mpf.plot(index_data,
#                               mav=(30),
#                               type='candle',
#                               ylabel='Price',
#                               panel_ratios=(5, 2),
#                               figratio=(2, 1),
#                               figscale=1.5,
#                               style=s,
#                               addplot=ap,
#                               tight_layout=True,
#                               xrotation=60,
#                               returnfig=True)

#     labels = ["SMA 30"]
#     self.axes[0].legend(labels, loc='upper left')
#     self.axes[2].legend(["Mansfield's Relative Strength [vs PSEi]"],
#                         fontsize=9, loc='upper left')

#     self.axes[0].set_title(f"\nPSE {sector_user_input} INDEX")
#     plt.show()

# %%


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1707, 516)
        MainWindow.setMinimumSize(QtCore.QSize(0, 0))
        MainWindow.setMaximumSize(QtCore.QSize(16777215, 16777215))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(
            "../../../../Downloads/pngegg.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_sec_interval = QtWidgets.QLabel(self.tab)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_sec_interval.setFont(font)
        self.label_sec_interval.setObjectName("label_sec_interval")
        self.gridLayout.addWidget(self.label_sec_interval, 0, 3, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(
            178, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)
        self.label_sec_MarketAverage = QtWidgets.QLabel(self.tab)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_sec_MarketAverage.setFont(font)
        self.label_sec_MarketAverage.setObjectName("label_sec_MarketAverage")
        self.gridLayout.addWidget(self.label_sec_MarketAverage, 0, 6, 1, 1)
        self.label_sec_MovingAverage = QtWidgets.QLabel(self.tab)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_sec_MovingAverage.setFont(font)
        self.label_sec_MovingAverage.setObjectName("label_sec_MovingAverage")
        self.gridLayout.addWidget(self.label_sec_MovingAverage, 1, 6, 1, 1)
        self.label_sec_sector = QtWidgets.QLabel(self.tab)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_sec_sector.setFont(font)
        self.label_sec_sector.setObjectName("label_sec_sector")
        self.gridLayout.addWidget(self.label_sec_sector, 1, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 5, 1, 1)
        self.comboBox_sec_sector = QtWidgets.QComboBox(self.tab)
        self.comboBox_sec_sector.setObjectName("comboBox_sec_sector")
        self.gridLayout.addWidget(self.comboBox_sec_sector, 1, 1, 1, 1)
        self.comboBox_sec_MarketAverage = QtWidgets.QComboBox(self.tab)
        self.comboBox_sec_MarketAverage.setObjectName(
            "comboBox_sec_MarketAverage")
        self.gridLayout.addWidget(self.comboBox_sec_MarketAverage, 0, 7, 1, 1)
        self.comboBox_sec_MovingAverage = QtWidgets.QComboBox(self.tab)
        self.comboBox_sec_MovingAverage.setObjectName(
            "comboBox_sec_MovingAverage")
        self.gridLayout.addWidget(self.comboBox_sec_MovingAverage, 1, 7, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 1, 5, 1, 1)
        self.comboBox_sec_exchange = QtWidgets.QComboBox(self.tab)
        self.comboBox_sec_exchange.setObjectName("comboBox_sec_exchange")
        self.gridLayout.addWidget(self.comboBox_sec_exchange, 0, 1, 1, 1)
        self.label_sec_timespan = QtWidgets.QLabel(self.tab)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_sec_timespan.setFont(font)
        self.label_sec_timespan.setObjectName("label_sec_timespan")
        self.gridLayout.addWidget(self.label_sec_timespan, 1, 3, 1, 1)
        self.label_sec_exchange = QtWidgets.QLabel(self.tab)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_sec_exchange.setFont(font)
        self.label_sec_exchange.setObjectName("label_sec_exchange")
        self.gridLayout.addWidget(self.label_sec_exchange, 0, 0, 1, 1)
        self.comboBox_sec_timespan = QtWidgets.QComboBox(self.tab)
        self.comboBox_sec_timespan.setObjectName("comboBox_sec_timespan")
        self.gridLayout.addWidget(self.comboBox_sec_timespan, 1, 4, 1, 1)
        self.comboBox_sec_interval = QtWidgets.QComboBox(self.tab)
        self.comboBox_sec_interval.setObjectName("comboBox_sec_interval")
        self.gridLayout.addWidget(self.comboBox_sec_interval, 0, 4, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(
            40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 1, 2, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout, 0, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(
            838, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem4, 0, 1, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem5 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem5)
        self.gridLayout_3.addLayout(self.verticalLayout_2, 1, 0, 1, 2)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.tab_2)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_stock_exchange = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_exchange.setFont(font)
        self.label_stock_exchange.setObjectName("label_stock_exchange")
        self.gridLayout_4.addWidget(self.label_stock_exchange, 0, 0, 1, 1)
        self.comboBox_stock_exchange = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stock_exchange.setObjectName("comboBox_stock_exchange")
        self.gridLayout_4.addWidget(self.comboBox_stock_exchange, 0, 1, 1, 1)
        self.label_stock_sector = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_sector.setFont(font)
        self.label_stock_sector.setObjectName("label_stock_sector")
        self.gridLayout_4.addWidget(self.label_stock_sector, 1, 0, 1, 1)
        self.comboBox_stock_sector = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stock_sector.setObjectName("comboBox_stock_sector")
        self.gridLayout_4.addWidget(self.comboBox_stock_sector, 1, 1, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_4, 0, 0, 3, 1)
        spacerItem6 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem6, 0, 1, 1, 1)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label_stock_sectors = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_sectors.setFont(font)
        self.label_stock_sectors.setObjectName("label_stock_sectors")
        self.formLayout.setWidget(
            0, QtWidgets.QFormLayout.LabelRole, self.label_stock_sectors)
        self.comboBox_stock_sectors = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stock_sectors.setObjectName("comboBox_stock_sectors")
        self.formLayout.setWidget(
            0, QtWidgets.QFormLayout.FieldRole, self.comboBox_stock_sectors)
        self.label_stock_subsectors = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_subsectors.setFont(font)
        self.label_stock_subsectors.setObjectName("label_stock_subsectors")
        self.formLayout.setWidget(
            1, QtWidgets.QFormLayout.LabelRole, self.label_stock_subsectors)
        self.comboBox_stocks = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stocks.setObjectName(
            "comboBox_stocks")
        self.formLayout.setWidget(
            1, QtWidgets.QFormLayout.FieldRole, self.comboBox_stocks)
        self.gridLayout_7.addLayout(self.formLayout, 0, 2, 3, 1)
        spacerItem7 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem7, 0, 3, 2, 1)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_stock_interval = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_interval.setFont(font)
        self.label_stock_interval.setObjectName("label_stock_interval")
        self.gridLayout_5.addWidget(self.label_stock_interval, 0, 0, 1, 1)
        self.comboBox_stock_interval = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stock_interval.setObjectName("comboBox_stock_interval")
        self.gridLayout_5.addWidget(self.comboBox_stock_interval, 0, 1, 1, 1)
        self.label_stock_timespan = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_timespan.setFont(font)
        self.label_stock_timespan.setObjectName("label_stock_timespan")
        self.gridLayout_5.addWidget(self.label_stock_timespan, 1, 0, 1, 1)
        self.comboBox_stock_timespan = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stock_timespan.setObjectName("comboBox_stock_timespan")
        self.gridLayout_5.addWidget(self.comboBox_stock_timespan, 1, 1, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_5, 0, 4, 3, 1)
        spacerItem8 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem8, 0, 5, 1, 1)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label_stock_MarketAverage = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_MarketAverage.setFont(font)
        self.label_stock_MarketAverage.setObjectName(
            "label_stock_MarketAverage")
        self.gridLayout_6.addWidget(self.label_stock_MarketAverage, 0, 0, 1, 1)
        self.comboBox_stock_MarketAverage = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stock_MarketAverage.setObjectName(
            "comboBox_stock_MarketAverage")
        self.gridLayout_6.addWidget(
            self.comboBox_stock_MarketAverage, 0, 1, 1, 1)
        self.label_stock_MovingAverage = QtWidgets.QLabel(self.tab_2)
        font = QtGui.QFont()
        font.setFamily("Arial")
        self.label_stock_MovingAverage.setFont(font)
        self.label_stock_MovingAverage.setObjectName(
            "label_stock_MovingAverage")
        self.gridLayout_6.addWidget(self.label_stock_MovingAverage, 1, 0, 1, 1)
        self.comboBox_stock_MovingAverage = QtWidgets.QComboBox(self.tab_2)
        self.comboBox_stock_MovingAverage.setObjectName(
            "comboBox_stock_MovingAverage")
        self.gridLayout_6.addWidget(
            self.comboBox_stock_MovingAverage, 1, 1, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_6, 0, 6, 3, 1)
        spacerItem9 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem9, 1, 1, 2, 1)
        spacerItem10 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem10, 2, 3, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(
            48, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem11, 2, 5, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_7, 0, 0, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(
            113, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem12, 0, 1, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem13 = QtWidgets.QSpacerItem(
            20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem13)
        self.gridLayout_8.addLayout(self.verticalLayout, 1, 0, 1, 2)
        self.tabWidget.addTab(self.tab_2, "")
        self.gridLayout_2.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1707, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionMaximize = QtWidgets.QAction(MainWindow)
        self.actionMaximize.setWhatsThis("")
        self.actionMaximize.setObjectName("actionMaximize")
        self.actionNormal = QtWidgets.QAction(MainWindow)
        self.actionNormal.setObjectName("actionNormal")
        self.actionExit_2 = QtWidgets.QAction(MainWindow)
        self.actionExit_2.setObjectName("actionExit_2")
        self.menuFile.addAction(self.actionMaximize)
        self.menuFile.addAction(self.actionNormal)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit_2)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.actionExit_2.triggered.connect(MainWindow.close)
        self.actionMaximize.triggered.connect(MainWindow.showMaximized)
        self.actionNormal.triggered.connect(MainWindow.showNormal)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        ##____________##

        # combobox values
        # stock_sector
        self.comboBox_sec_exchange.currentTextChanged.connect(
            self.combobox_sectors)
        # sector_average
        self.comboBox_sec_exchange.currentTextChanged.connect(
            self.combobox_average)

        # stock_exchange
        self.comboBox_sec_exchange.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_sec_exchange.addItems(exchange)

        # sector_interval
        self.comboBox_sec_interval.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_sec_interval.addItems(interval)

        # sector_timespan
        self.comboBox_sec_timespan.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_sec_timespan.addItems(timespan)

        # sector_Moving Average
        self.comboBox_sec_MovingAverage.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_sec_MovingAverage.addItems(ma)

        ##____________##
        # stock_stock
        self.comboBox_stocks.currentTextChanged.connect(
            self.combobox_stocks)
        # stock_subsector
        self.comboBox_stock_sectors.currentTextChanged.connect(
            self.combobox_SUBsectors)
        # stock_sector
        self.comboBox_stock_exchange.currentTextChanged.connect(
            self.combobox_sectors)
        # stock_average
        self.comboBox_stock_exchange.currentTextChanged.connect(
            self.combobox_average)

        # stock_exchange
        self.comboBox_stock_exchange.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_stock_exchange.addItems(exchange)

        # stock_interval
        self.comboBox_stock_interval.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_stock_interval.addItems(interval)

        # stock_timespan
        self.comboBox_stock_timespan.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_stock_timespan.addItems(timespan)

        # stock_Moving Average
        self.comboBox_stock_MovingAverage.currentIndexChanged['QString'].connect(
            self.update)
        self.comboBox_stock_MovingAverage.addItems(ma)

    def update(self, value):
        print("Value from Combo Box", value)

    def combobox_average(self, text):
        self.comboBox_stock_MarketAverage.clear()
        self.comboBox_sec_MarketAverage.clear()
        pse = ['PSEi', 'PSE All Shares']
        usa = ['S&P 500', 'DJIA', 'Russell 3000', 'Nasdaq Composite']

        if text == exchange[0]:
            self.comboBox_stock_MarketAverage.addItems(pse)
            self.comboBox_sec_MarketAverage.addItems(pse)
        elif text == exchange[1]:
            self.comboBox_stock_MarketAverage.addItems(usa[:-1])
            self.comboBox_sec_MarketAverage.addItems(usa[:-1])
        else:
            self.comboBox_stock_MarketAverage.addItems(usa)
            self.comboBox_sec_MarketAverage.addItems(usa)

    def combobox_sectors(self, text):
        self.comboBox_stock_sectors.clear()
        self.comboBox_sec_sector.clear()
        pse = list(pd.read_sql_query(
            '''SELECT sector FROM sectors WHERE exchange_id = 1''', engine)['sector'])
        if text == exchange[0]:
            self.comboBox_stock_sectors.addItems(pse)
            self.comboBox_sec_sector.addItems(pse[1:-1])
        else:
            pass

    def combobox_SUBsectors(self, text):
        self.comboBox_stocks.clear()
        text = self.comboBox_stock_sectors.currentText()
        query = '''SELECT DISTINCT subsector FROM pse_company_info WHERE sector = {0}{1}{2} ORDER BY subsector'''.format(
            "'", text, "'")
        self.comboBox_stocks.addItems(
            list(pd.read_sql_query(query, engine)['subsector']))

    def combobox_stocks(self, text):
        self.comboBox_stock_sector.clear()
        text = self.comboBox_stocks.currentText()
        query = '''SELECT ticker FROM pse_company_info WHERE subsector = {0}{1}{2} ORDER BY ticker'''.format(
            "'", text, "'")
        self.comboBox_stock_sector.addItems(
            list(pd.read_sql_query(query, engine)['ticker']))

    # this function retrieves price data from the database


# %%


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(
            "MainWindow", "Stan Weinstein Stage Analysis"))
        MainWindow.setStatusTip(_translate("MainWindow", "© Fireboy_v.1 2021"))
        self.label_sec_interval.setText(_translate("MainWindow", "Interval:"))
        self.label_sec_MarketAverage.setText(
            _translate("MainWindow", "Market Average:"))
        self.label_sec_MovingAverage.setText(
            _translate("MainWindow", "Moving Average:"))
        self.label_sec_sector.setText(_translate("MainWindow", "Sector:"))
        self.label_sec_timespan.setText(_translate("MainWindow", "Timespan:"))
        self.label_sec_exchange.setText(_translate("MainWindow", "Exchange:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tab), _translate("MainWindow", "Sector"))
        self.label_stock_exchange.setText(
            _translate("MainWindow", "Exchange:"))
        self.label_stock_sector.setText(_translate("MainWindow", "Stock:"))
        self.label_stock_sectors.setText(_translate("MainWindow", "Sector:"))
        self.label_stock_subsectors.setText(
            _translate("MainWindow", "Sub-sector:"))
        self.label_stock_interval.setText(
            _translate("MainWindow", "Interval:"))
        self.label_stock_timespan.setText(
            _translate("MainWindow", "Timespan:"))
        self.label_stock_MarketAverage.setText(
            _translate("MainWindow", "Market Average:"))
        self.label_stock_MovingAverage.setText(
            _translate("MainWindow", "Moving Average:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.tab_2), _translate("MainWindow", "Stocks"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setStatusTip(_translate("MainWindow", "Click to Exit"))
        self.actionMaximize.setText(_translate("MainWindow", "Maximize"))
        self.actionMaximize.setStatusTip(
            _translate("MainWindow", "Click to Maximize"))
        self.actionNormal.setText(_translate("MainWindow", "Normal"))
        self.actionNormal.setStatusTip(
            _translate("MainWindow", "Click to Normalize"))
        self.actionExit_2.setText(_translate("MainWindow", "Exit"))
        self.actionExit_2.setStatusTip(
            _translate("MainWindow", "Click to Exit"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
# %%
